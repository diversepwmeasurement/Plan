jobs:
  test:
    name: Test, Build & Upload
    runs-on: self-hosted
    services:
      mariadb:
        env:
          MYSQL_DATABASE: test
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
          MYSQL_USER: user
        image: mariadb:11.1-rc
        options: --health-cmd="mariadb-admin ping" --health-interval=5s --health-timeout=2s
          --health-retries=3
        ports:
        - 3306
    steps:
    - continue-on-error: true
      name: "\U0001F4E5 Checkout git repository"
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: "\u2615 Setup JDK"
      uses: actions/setup-java@v4
      with:
        distribution: adopt
        java-version: '17'
    - continue-on-error: true
      name: "\U0001F4BC Load Gradle Cache"
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties')
          }}
        path: '~/.gradle/caches

          ~/.gradle/wrapper

          '
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      name: "\U0001F6E0 Build jars"
      run: 'cd Plan

        ./gradlew shadowJar

        '
    - continue-on-error: true
      name: "\u2699 Get versions"
      run: 'cd Plan

        ./gradlew snapshotVersion jarNameVersion

        git_hash=$(git rev-parse --short "$GITHUB_SHA")

        echo "git_hash=$git_hash" >> $GITHUB_ENV

        echo "snapshotVersion=$(cat build/versions/snapshot.txt)" >> $GITHUB_ENV

        echo "versionString=$(cat build/versions/jar.txt)" >> $GITHUB_ENV

        echo "artifactPath=$(pwd)/builds" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: "\U0001F4E4 Upload Plan.jar"
      uses: actions/upload-artifact@v4
      with:
        name: Plan-${{ env.versionString }}-${{ env.git_hash }}.jar
        path: ${{ env.artifactPath }}/Plan-${{ env.snapshotVersion }}.jar
    - continue-on-error: true
      name: "\U0001F4E4 Upload PlanFabric.jar"
      uses: actions/upload-artifact@v4
      with:
        name: PlanFabric-${{ env.versionString }}-${{ env.git_hash }}.jar
        path: ${{ env.artifactPath }}/PlanFabric-${{ env.snapshotVersion }}.jar
    - continue-on-error: true
      name: "\U0001F6A6 Setup Selenium Webdriver"
      uses: nanasess/setup-chromedriver@v2
    - continue-on-error: true
      name: "\U0001F6A6 Setup Selenium Webdriver settings"
      run: 'export DISPLAY=:99

        chromedriver --url-base=/wd/hub &

        sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &

        '
    - continue-on-error: true
      env:
        PORT: ${{ job.services.mariadb.ports[3306] }}
      name: "\U0001F4F6 Verify MariaDB connection"
      run: "while ! mysqladmin ping -h\"127.0.0.1\" -P\"$PORT\" --silent; do\n  sleep\
        \ 1\ndone\n"
    - continue-on-error: true
      env:
        CHROMEDRIVER: /usr/local/bin/chromedriver
        MYSQL_DB: test
        MYSQL_PASS: password
        MYSQL_PORT: ${{ job.services.mariadb.ports[3306] }}
        MYSQL_USER: user
      name: "\U0001FA7A Test"
      run: 'cd Plan

        ./gradlew build

        '
    - continue-on-error: true
      name: "\U0001F5A8 Build Javadocs"
      run: 'cd Plan

        echo "Building javadocs with gradle"

        ./gradlew aggregateJavadocs

        echo "Moving to working directory:"

        cd ../

        mkdir javadocs

        mkdir javadocs/all

        mkdir javadocs/api

        cp -r Plan/build/docs/javadoc/* javadocs/all/

        cp -r Plan/api/build/docs/javadoc/* javadocs/api/

        cp scripts/index.html javadocs/index.html

        cd javadocs

        touch .nojekyll

        '
    - continue-on-error: true
      if: github.ref == 'refs/heads/master'
      name: "\U0001F4E4 Deploy Javadocs"
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: gh-pages
        folder: javadocs
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      if: ${{ env.SONAR_TOKEN != '' }}
      name: "\U0001FA7A SonarCloud - Java"
      run: 'cd Plan

        ./gradlew sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=player-analytics-plan

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      if: ${{ env.SONAR_TOKEN != '' }}
      name: "\U0001FA7A SonarCloud - React"
      uses: SonarSource/sonarcloud-github-action@master
name: CI
on:
  repository_dispatch:
    types: trigger-ga___ci.yml
